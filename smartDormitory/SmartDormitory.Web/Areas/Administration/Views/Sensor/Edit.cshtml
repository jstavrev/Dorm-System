@model SensorDetailsViewModel
@{
    ViewData["Title"] = "Sensor Details";
}
<br />
<br />

<h2 style="color: white" align="center">Sensor Administration</h2>
<div class="row">
    <div class="col-lg-6">
        <form asp-area="Administration" asp-action="Edit" asp-controller="Sensor" id="register-form-admin" method="post">

            <input type="hidden" value="@ViewBag.sensorId">
            <input type="hidden" value="@ViewBag.userId">
            <div class="row">
                <div class="col-lg-6">
                    <label asp-for="Name" style="color: white" align="center">Name:</label><br />
                    <input name="name" id="name" asp-for="Name" class="form-control" required maxlength="50" minlength="3" /><br />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="col-lg-6">
                    <label asp-for="UpdateInterval" style="color: white" align="center">Update Interval:</label><br />
                    <input name="updateInterval" asp-for="UpdateInterval" id="updateInterval" class="form-control" required /><br />
                    <span asp-validation-for="UpdateInterval" class="text-danger"></span>
                </div>
            </div>

            <label asp-for="Description" style="color: white">Description:</label><br />
            <textarea name="description" asp-for="Description" class="form-control"></textarea><br />
            <span asp-validation-for="Description" class="text-danger"></span>

            @if (Model.TypeId == 4)
            {
                @:<div class="row" style="color: white">
                    <div class="form-group col-md-6">
                        @if (Model.UserMinValue != null)
                        {
                            if (Model.UserMinValue == "1")
                            {
                                <label>Current Value: </label>

                                <input type="text" value="Open (Not Occupied)" class="form-control" readonly required>
                            }
                            else
                            {
                                <label>Current Value: </label>

                                <input type="text" value="Current Value: Closed (Occupied)" class="form-control" readonly required>
                            }
                        }
                    </div>
                    <div class="form-group col-md-6">

                        <div id="validation" name="validation">

                        </div>
                    </div>
                @:</div>
            }
            else
            {

                <div class="row" style="color: white" id="validation" name="validation">

                </div>
            }
            <br />

            <div class="row">
                <div class="form-group col-md-6">
                    <label asp-for="Latitude" style="color: white" align="center">Latitude</label>
                    <input name="Latitude" asp-for="Latitude" id="Latitude" type="text" value="@Model.Latitude" class="form-control" placeholder="Select from map" readonly required>
                    <span asp-validation-for="Latitude" class="text-danger"></span>
                </div>

                <div class="form-group col-md-6">
                    <label asp-for="Longitude" style="color: white" align="center">Longtitude</label>
                    <input name="Longitude" id="Longitude" asp-for="Longitude" type="text" value="@Model.Longitude" class="form-control" placeholder="Select from map" readonly required>
                    <span asp-validation-for="Longitude" class="text-danger"></span>
                </div>
            </div>

            <div class="row" id="validation" name="validation"></div>
            <br />
            <div class="row">
                <div class="col-lg-6 form-group">
                    <label class="" id="checkbox">
                        <input asp-for="IsPublic" type="checkbox" autocomplete="off">
                        <label asp-for="IsPublic" style="color: white" align="center">Public</label>
                        <span class="checkmark"></span>
                    </label>
                </div>

                <div class="col-lg-6 form-group">
                    <label class="" id="checkbox">
                        <input asp-for="IsRequiredNotification" type="checkbox" autocomplete="off">
                        <label asp-for="IsRequiredNotification" style="color: white" align="center">Notifications</label>
                        <span class="checkmark"></span>
                    </label>
                </div>
            </div>
            <br />
            <button type="submit" class="btn btn-primary center-block">Save</button>
        </form>
    </div>

    <div class="col-lg-6">
        <br />
        <div>
            <div id="map"></div>
            <script>
                var map, marker;
                function initMap() {
                    map = new google.maps.Map(document.getElementById('map'), {
                        center: { lat: @Model.Latitude, lng: @Model.Longitude },
                        zoom: 8
                    });

                    var marker = new google.maps.Marker({
               position: { lng: @Model.Longitude, lat: @Model.Latitude  },
                map: map
                    })
                    marker.setAnimation(google.maps.Animation.BOUNCE);

                    google.maps.event.addListener(map, 'click', function (event) {
                        if (marker) {
                            marker.setPosition(event.latLng)
                            $('#latitude').attr('value', marker.position.lat)
                            $('#longitude').attr('value', marker.position.lng)
                        }
                        else {
                            marker = new google.maps.Marker({
                                position: event.latLng,
                                map: map,
                            });
                            marker.setAnimation(google.maps.Animation.BOUNCE);
                            $('#latitude').attr('value', marker.position.lat)
                            $('#longitude').attr('value', marker.position.lng)
                        }
                    });
                }
            </script>
            <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCDteKY2bbicMlrP2DHSJmSciuIP-E_D6k&callback=initMap"
                    async defer></script>
        </div>
    </div>
</div>

<style>
    #map {
        height: 400px;
        width: 550px;
    }

    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>

@section Scripts
    {
    <script>
        var json = @Html.Raw(Json.Serialize(Model.SensorValidations));

        var sensorValues = @Html.Raw(Json.Serialize(Model));

        console.log(json)
        $(document).ready(function () {
            $.get({
                url: "/Administration/Sensor/AdminValidationView?typeId=" + @Model.SensorValidations.TypeId,
                type: 'Get',
                cache: false,
                success: function (response) {
                    $('#validation').html(response);
                    $('#minValue').val(sensorValues.minValue);
                    $('#maxValue').val(sensorValues.maxValue);
                }
            });
        });


        jQuery.validator.setDefaults({
            errorClass: 'text-danger'
        });

        var validator = $("#register-form-admin").validate({
            rules: {
                name: "required",
                description: "required",
                updateInterval: {
                    required: true,
                    range: [json.updateInterval, 99999]
                },
                minValue: {
                    required: true,
                    range: [json.minValue, json.maxValue]
                },
                maxValue: {
                    required: true,
                    range: [json.minValue, json.maxValue]
                },
                Latitude: "required",
                Longitude: "required"
            },
            messages: {
                name: "Please enter a name for your sensor.",
                description: "A description for your sensor is required.",
                updateInterval: {
                    required: "A interval for sensor updates is required",
                    range: "Update interval cannot be smaller lower than " + json.updateInterval + " seconds."
                },
                minValue: {
                    required: "Please first select a sensor.",
                    range: "Acceptable range values cannot be outside " + json.minValue + "-" + json.maxValue + "."
                },
                maxValue: {
                    required: "Please first select a sensor.",
                    range: "Acceptable range values cannot be outside " + json.minValue + "-" + json.maxValue + "."
                },
                Latitude: "Latitude and Longtitude are required (select them using our map)."
            }
        });
    </script>
}
